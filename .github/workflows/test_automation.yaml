# This workflow will do a clean installation of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-nodejs

name: Build Image

on:
  pull_request:
    branches: [ "main" ]

jobs:
  test:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [21.x]
        # See supported Node.js release schedule at https://nodejs.org/en/about/releases/
    services:
      postgres:
        image: postgres:latest
        env:
          POSTGRES_USER: ${{ secrets.USERNAME }}
          POSTGRES_PASSWORD: ${{ secrets.PASSWORD }}
          POSTGRES_DB: ${{ secrets.DATABASE }}
        ports:
          - 5432:5432
    env:
      DB_PORT: ${{ secrets.DB_PORT }}
      DATABASE: ${{ secrets.DATABASE }}
      USERNAME: ${{ secrets.USERNAME }}
      PASSWORD: ${{ secrets.PASSWORD }}
      HOST: ${{ secrets.HOST }}
      DIALECT: ${{ secrets.DIALECT }}
      GOOGLE_APPLICATION_CREDENTIALS: ${{secrets.GOOGLE_APPLICATION_CREDENTIALS}}

    steps:

      - uses: actions/checkout@v3
        name: Use Node.js ${{ matrix.node-version }}
        
      - name: create env file
        run: |
          touch .env
          echo DB_PORT=${{ secrets.DB_PORT }} >> .env
          echo DATABASE=${{ secrets.DATABASE }} >> .env
          echo USERNAME=${{ secrets.USERNAME }} >> .env
          echo PASSWORD=${{ secrets.PASSWORD }} >> .env
          echo HOST=${{ secrets.HOST }} >> .env
          echo DIALECT=${{ secrets.DIALECT }} >> .env

      
      - run: pwd && ls -lart
      - run: cd .. && pwd && ls -lart

      - uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'

      - run: npm install
      - run: npm test
      
      - run: zip -r "${{ github.workspace}}/webapp.zip" "./../webapp"
      - run: ls -lart "${{ github.workspace}}"
           
      - uses: actions/upload-artifact@v4
        with:
          name: webapp
          path: webapp.zip
          

  packer:
    permissions:
     contents: 'read'
     id-token: 'write'
    needs: test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      
      - id: 'auth'
        name: 'Authenticate to Google Cloud'
        uses: 'google-github-actions/auth@v2'
        with:
          credentials_json: '${{ secrets.GOOGLE_CREDENTIALS }}'

      # - run: cp "${{ github.workspace}}/webapp.zip" .      
      
      - name: Download a single artifact
        uses: actions/download-artifact@v4
        with:
          name: webapp
          path: ..
          
      - name: Setup packer
        uses: hashicorp/setup-packer@main
        with:
          version: '1.8.3' 

      - run: pwd && ls -lart
      - run: cd .. && pwd && ls -lart

      - name: Initialize packer
        working-directory: packer
        run: packer init .
        
      - name: Format packer
        working-directory: packer
        run: packer fmt . 
        
      - name: Validate packer
        working-directory: packer
        run: packer validate . 
 
      - name: Run packer Build
        working-directory: packer
        run: packer build .
